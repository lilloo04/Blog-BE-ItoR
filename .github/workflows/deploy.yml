name: Deploy to EC2 with Docker

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew build -x test

      - name: Zip project for transfer
        run: zip -r deploy-package.zip build Dockerfile gradlew gradlew.bat settings.gradle build.gradle src src/main/resources

      - name: Copy zipped project to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "deploy-package.zip"
          target: "/home/ubuntu/app"

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          envs: DB_URL,DB_USERNAME,DB_PASSWORD,JWT_SECRET
          script: |
            sudo apt update && sudo apt install unzip -y
            cd ~/app
            rm -rf app-unzipped
            mkdir app-unzipped
            unzip deploy-package.zip -d app-unzipped
            cd app-unzipped

            # application.properties 생성
            cat <<EOF > src/main/resources/application.properties
            spring.datasource.url=${DB_URL}
            spring.datasource.username=${DB_USERNAME}
            spring.datasource.password=${DB_PASSWORD}
            spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
  
            jwt.secret=${JWT_SECRET}
            EOF
  
            docker stop blog-be-itor || true
            docker rm blog-be-itor || true
            docker build -t blog-be-itor .
            docker run -d -p 8080:8080 --name blog-be-itor blog-be-itor
